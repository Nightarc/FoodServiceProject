-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://github.com/pgadmin-org/pgadmin4/issues/new/choose if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS "FoodService"."Customer"
(
    "CustomerID" integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    "Name" character varying COLLATE pg_catalog."default",
    "Email" character varying COLLATE pg_catalog."default",
    "LastAddress" character varying COLLATE pg_catalog."default",
    "PhoneNumber" text COLLATE pg_catalog."default" NOT NULL,
    "PromotionList" integer,
    CONSTRAINT "Customer_pkey" PRIMARY KEY ("CustomerID"),
    CONSTRAINT "U_Customer_PromotionListID" UNIQUE ("PromotionList")
);

CREATE TABLE IF NOT EXISTS "FoodService"."Order"
(
    "OrderID" integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 ),
    "PaymentID" integer,
    "CustomerID" integer NOT NULL,
    "Address" text NOT NULL,
    "Time" timestamp with time zone NOT NULL,
    "Date" date NOT NULL,
    "DeliveryPointID" integer,
    "PromotionList" integer,
    PRIMARY KEY ("OrderID"),
    CONSTRAINT "U_Order_PaymentID" UNIQUE ("PaymentID"),
    CONSTRAINT "U_Order_CustomerID" UNIQUE ("CustomerID"),
    CONSTRAINT "U_Order_DeliveryPointID" UNIQUE ("DeliveryPointID")
);

CREATE TABLE IF NOT EXISTS "FoodService"."OrderDetails"
(
    "FoodItem" integer,
    "Quantity" integer,
    "OrderID" integer,
    CONSTRAINT "U_FoodID" UNIQUE ("FoodItem"),
    CONSTRAINT "U_OrderID" UNIQUE ("OrderID")
);

CREATE TABLE IF NOT EXISTS "FoodService"."Subscription"
(
    "SubscriptionID" integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 ),
    "DateStart" date,
    "DateEnd" date,
    "CustomerID" integer,
    "PaymentID" integer,
    "SubscriptionType" integer,
    PRIMARY KEY ("SubscriptionID"),
    CONSTRAINT "U_Subscription_CustomerID" UNIQUE ("CustomerID"),
    CONSTRAINT "U_Subscription_PaymentID" UNIQUE ("PaymentID"),
    CONSTRAINT "U_Subscription_SubscriptionType" UNIQUE ("SubscriptionType")
);

CREATE TABLE IF NOT EXISTS "FoodService"."SubscriptionType"
(
    "SubscriptionTypeID" integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 ),
    "Description" text,
    "OrderTemplate" integer,
    PRIMARY KEY ("SubscriptionTypeID"),
    CONSTRAINT "U_SubscriptionType_OrderID" UNIQUE ("OrderTemplate")
);

CREATE TABLE IF NOT EXISTS "FoodService"."Payment"
(
    "PaymentID" integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 ),
    "NetPrice" money NOT NULL,
    "PaymentAmount" money NOT NULL,
    "Time" time with time zone NOT NULL,
    "Date" date NOT NULL,
    PRIMARY KEY ("PaymentID")
);

CREATE TABLE IF NOT EXISTS "FoodService"."Food"
(
    "FoodID" integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 ),
    "FoodName" text NOT NULL,
    "Price" money NOT NULL,
    "Components" text,
    "Description" text,
    PRIMARY KEY ("FoodID")
);

CREATE TABLE IF NOT EXISTS "FoodService"."DeliveryPoint"
(
    "DeliveryPointID" integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 ),
    "Address" text NOT NULL,
    "Name" text NOT NULL,
    PRIMARY KEY ("DeliveryPointID")
);

CREATE TABLE IF NOT EXISTS "FoodService"."Promotion"
(
    "PromotionID" integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 ),
    "Discount" integer,
    PRIMARY KEY ("PromotionID")
);

CREATE TABLE IF NOT EXISTS "FoodService"."PromotionList"
(
    "CustomerID" integer,
    "PromotionID" integer
);

ALTER TABLE IF EXISTS "FoodService"."Order"
    ADD CONSTRAINT "Order_CustomerID_FK" FOREIGN KEY ("CustomerID", "PromotionList")
    REFERENCES "FoodService"."Customer" ("CustomerID", "PromotionList") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS "FoodService"."Order"
    ADD CONSTRAINT "Order_PaymentID_FK" FOREIGN KEY ("PaymentID")
    REFERENCES "FoodService"."Payment" ("PaymentID") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS "FoodService"."Order"
    ADD CONSTRAINT "Order_DeliveryPointID_FK" FOREIGN KEY ("DeliveryPointID")
    REFERENCES "FoodService"."DeliveryPoint" ("DeliveryPointID") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS "FoodService"."OrderDetails"
    ADD CONSTRAINT "OrderDetails_OrderID_FK" FOREIGN KEY ("OrderID")
    REFERENCES "FoodService"."Order" ("OrderID") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS "FoodService"."OrderDetails"
    ADD CONSTRAINT "OrderDetails_FoodID_FK" FOREIGN KEY ("FoodItem")
    REFERENCES "FoodService"."Food" ("FoodID") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS "FoodService"."Subscription"
    ADD CONSTRAINT "Subscription_CustomerID_FK" FOREIGN KEY ("CustomerID")
    REFERENCES "FoodService"."Customer" ("CustomerID") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS "FoodService"."Subscription"
    ADD CONSTRAINT "Subscription_PaymentID_FK" FOREIGN KEY ("PaymentID")
    REFERENCES "FoodService"."Payment" ("PaymentID") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS "FoodService"."Subscription"
    ADD CONSTRAINT "Subscription_SubscriptionTypeID_FK" FOREIGN KEY ("SubscriptionType")
    REFERENCES "FoodService"."SubscriptionType" ("SubscriptionTypeID") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS "FoodService"."SubscriptionType"
    ADD CONSTRAINT "SubscriptionType_OrderTemplateID_FK" FOREIGN KEY ("OrderTemplate")
    REFERENCES "FoodService"."OrderDetails" ("OrderID") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS "FoodService"."PromotionList"
    ADD CONSTRAINT "PromotionList_CustomerID_FK" FOREIGN KEY ("CustomerID")
    REFERENCES "FoodService"."Customer" ("CustomerID") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS "FoodService"."PromotionList"
    ADD CONSTRAINT "PromotionList_PromotionID_FK" FOREIGN KEY ("PromotionID")
    REFERENCES "FoodService"."Promotion" ("PromotionID") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;

END;